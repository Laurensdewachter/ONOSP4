{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 1, false],
        ["key_0", 32, false],
        ["metadata.ecmp_select", 14, false],
        ["metadata.count", 16, false],
        ["metadata.remaining", 16, false],
        ["metadata.cntSyn", 32, false],
        ["metadata.cntSynAck", 32, false],
        ["metadata.cntSynAckRst", 32, false],
        ["metadata.toBlock", 1, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "ipv4_option_t",
      "id" : 4,
      "fields" : [
        ["copyFlag", 1, false],
        ["optClass", 2, false],
        ["option", 5, false],
        ["optionLength", 8, false]
      ]
    },
    {
      "name" : "mri_t",
      "id" : 5,
      "fields" : [
        ["count", 16, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 6,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 3, false],
        ["ecn", 3, false],
        ["urg", 1, false],
        ["ack", 1, false],
        ["psh", 1, false],
        ["rst", 1, false],
        ["syn", 1, false],
        ["fin", 1, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    },
    {
      "name" : "srcRoute_t",
      "id" : 7,
      "fields" : [
        ["bos", 1, false],
        ["port", 15, false]
      ]
    },
    {
      "name" : "switch_t",
      "id" : 8,
      "fields" : [
        ["swid", 32, false],
        ["synCnt", 32, false],
        ["synAckCnt", 32, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4_option",
      "id" : 4,
      "header_type" : "ipv4_option_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mri",
      "id" : 5,
      "header_type" : "mri_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 6,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[0]",
      "id" : 7,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[1]",
      "id" : 8,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[2]",
      "id" : 9,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[3]",
      "id" : 10,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[4]",
      "id" : 11,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[5]",
      "id" : 12,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[6]",
      "id" : 13,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[7]",
      "id" : 14,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srcRoutes[8]",
      "id" : 15,
      "header_type" : "srcRoute_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[0]",
      "id" : 16,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[1]",
      "id" : 17,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[2]",
      "id" : 18,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[3]",
      "id" : 19,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[4]",
      "id" : 20,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[5]",
      "id" : 21,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[6]",
      "id" : 22,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[7]",
      "id" : 23,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "swtraces[8]",
      "id" : 24,
      "header_type" : "switch_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [
    {
      "name" : "srcRoutes",
      "id" : 0,
      "header_type" : "srcRoute_t",
      "size" : 9,
      "header_ids" : [7, 8, 9, 10, 11, 12, 13, 14, 15]
    },
    {
      "name" : "swtraces",
      "id" : 1,
      "header_type" : "switch_t",
      "size" : 9,
      "header_ids" : [16, 17, 18, 19, 20, 21, 22, 23, 24]
    }
  ],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6],
    ["IPHeaderTooShort", 7]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "b2d",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "ihl"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x05"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "expression",
                  "value" : {
                    "op" : "d2b",
                    "left" : null,
                    "right" : {
                      "type" : "field",
                      "value" : ["scalars", "tmp"]
                    }
                  }
                },
                {
                  "type" : "hexstr",
                  "value" : "0x7"
                }
              ],
              "op" : "verify"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x05",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ipv4_option"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            }
          ]
        },
        {
          "name" : "parse_ipv4_option",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4_option"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x1f",
              "mask" : null,
              "next_state" : "parse_mri"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "option"]
            }
          ]
        },
        {
          "name" : "parse_mri",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "mri"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata.remaining"]
                },
                {
                  "type" : "field",
                  "value" : ["mri", "count"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0000",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_swtrace"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["mri", "count"]
            }
          ]
        },
        {
          "name" : "parse_swtrace",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "stack",
                  "value" : "swtraces"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata.remaining"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "metadata.remaining"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0000",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_swtrace"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.remaining"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 462,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "srcRoutes[0]", "srcRoutes[1]", "srcRoutes[2]", "srcRoutes[3]", "srcRoutes[4]", "srcRoutes[5]", "srcRoutes[6]", "srcRoutes[7]", "srcRoutes[8]", "ipv4", "ipv4_option", "mri", "swtraces[0]", "swtraces[1]", "swtraces[2]", "swtraces[3]", "swtraces[4]", "swtraces[5]", "swtraces[6]", "swtraces[7]", "swtraces[8]", "tcp"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.synReg",
      "id" : 0,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 188,
        "column" : 25,
        "source_fragment" : "synReg"
      },
      "size" : 2,
      "bitwidth" : 32
    },
    {
      "name" : "MyIngress.synAckRstReg",
      "id" : 1,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 189,
        "column" : 25,
        "source_fragment" : "synAckRstReg"
      },
      "size" : 2,
      "bitwidth" : 32
    },
    {
      "name" : "MyEgress.synReg",
      "id" : 2,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 312,
        "column" : 25,
        "source_fragment" : "synReg"
      },
      "size" : 2,
      "bitwidth" : 32
    },
    {
      "name" : "MyEgress.synAckRstReg",
      "id" : 3,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 313,
        "column" : 25,
        "source_fragment" : "synAckRstReg"
      },
      "size" : 2,
      "bitwidth" : 32
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 440,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 192,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.block",
      "id" : 4,
      "runtime_data" : [
        {
          "name" : "enabled",
          "bitwidth" : 1
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.toBlock"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 197,
            "column" : 1,
            "source_fragment" : "meta.toBlock = enabled"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.update_ttl",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 202,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.forward",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        },
        {
          "name" : "dstMac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 212,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.dstAddr = dstMac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 213,
            "column" : 2,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "syn_flood_filter264",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 264,
            "column" : 3,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "syn_flood_filter277",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.synReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 277,
            "column" : 4,
            "source_fragment" : "synReg.read(meta.cntSyn, (bit<32>)1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.cntSyn"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 278,
            "column" : 4,
            "source_fragment" : "meta.cntSyn = meta.cntSyn + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.synReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 279,
            "column" : 4,
            "source_fragment" : "synReg.write((bit<32>)1, meta.cntSyn)"
          }
        }
      ]
    },
    {
      "name" : "syn_flood_filter285",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.synAckRstReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 285,
            "column" : 6,
            "source_fragment" : "synAckRstReg.read(meta.cntSynAckRst, (bit<32>)1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.cntSynAckRst"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 286,
            "column" : 6,
            "source_fragment" : "meta.cntSynAckRst = meta.cntSynAckRst + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.synAckRstReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 287,
            "column" : 6,
            "source_fragment" : "synAckRstReg.write((bit<32>)1, meta.cntSynAckRst)"
          }
        }
      ]
    },
    {
      "name" : "NoAction",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyEgress.add_swtrace",
      "id" : 13,
      "runtime_data" : [
        {
          "name" : "swid",
          "bitwidth" : 32
        }
      ],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "At add_swtrace"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 316,
            "column" : 1,
            "source_fragment" : " log_msg(\\\"At add_swtrace\\\");"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mri", "count"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["mri", "count"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 317,
            "column" : 8,
            "source_fragment" : "hdr.mri.count = hdr.mri.count + 1"
          }
        },
        {
          "op" : "push",
          "parameters" : [
            {
              "type" : "header_stack",
              "value" : "swtraces"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 318,
            "column" : 8,
            "source_fragment" : "hdr.swtraces.push_front(1)"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "swtraces[0]"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 323,
            "column" : 8,
            "source_fragment" : "hdr.swtraces[0].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["swtraces[0]", "swid"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 324,
            "column" : 8,
            "source_fragment" : "hdr.swtraces[0].swid = swid"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.synReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 326,
            "column" : 1,
            "source_fragment" : "synReg.read(meta.cntSyn, (bit<32>)1)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.synAckRstReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 327,
            "column" : 1,
            "source_fragment" : "synAckRstReg.read(meta.cntSynAckRst, (bit<32>)1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["swtraces[0]", "synCnt"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 328,
            "column" : 8,
            "source_fragment" : "hdr.swtraces[0].synCnt = meta.cntSyn"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["swtraces[0]", "synAckCnt"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 329,
            "column" : 1,
            "source_fragment" : "hdr.swtraces[0].synAckCnt = meta.cntSynAckRst"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ihl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0f"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 331,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ihl = hdr.ipv4.ihl + 3"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4_option", "optionLength"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4_option", "optionLength"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 332,
            "column" : 8,
            "source_fragment" : "hdr.ipv4_option.optionLength = hdr.ipv4_option.optionLength + 12"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 333,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen + 12"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.forward",
      "id" : 14,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        },
        {
          "name" : "dstMac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 361,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstMac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 362,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.drop",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 366,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "syn_flood_filter412",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.synReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 412,
            "column" : 17,
            "source_fragment" : "synReg.read(meta.cntSyn, (bit<32>)1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.cntSyn"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 413,
            "column" : 17,
            "source_fragment" : "meta.cntSyn = meta.cntSyn + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.synReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSyn"]
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 414,
            "column" : 17,
            "source_fragment" : "synReg.write((bit<32>)1, meta.cntSyn)"
          }
        }
      ]
    },
    {
      "name" : "syn_flood_filter418",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.synAckRstReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 418,
            "column" : 25,
            "source_fragment" : "synAckRstReg.read(meta.cntSynAckRst, (bit<32>)1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.cntSynAckRst"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 419,
            "column" : 25,
            "source_fragment" : "meta.cntSynAckRst = meta.cntSynAckRst + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.synAckRstReg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.cntSynAckRst"]
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 420,
            "column" : 25,
            "source_fragment" : "synAckRstReg.write((bit<32>)1, meta.cntSynAckRst)"
          }
        }
      ]
    },
    {
      "name" : "syn_flood_filter373",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "key_0"]
            },
            {
              "type" : "field",
              "value" : ["swtraces[0]", "swid"]
            }
          ],
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 373,
            "column" : 16,
            "source_fragment" : "hdr.swtraces[0].swid"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 183,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "MyIngress.firewall",
      "tables" : [
        {
          "name" : "MyIngress.firewall",
          "id" : 0,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 217,
            "column" : 10,
            "source_fragment" : "firewall"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.srcAddr",
              "target" : ["ipv4", "srcAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4, 0],
          "actions" : ["MyIngress.block", "NoAction"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "MyIngress.block" : "node_3",
            "NoAction" : "node_3"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_syn_flood_filter264",
          "id" : 1,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 264,
            "column" : 3,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["syn_flood_filter264"],
          "base_default_next" : null,
          "next_tables" : {
            "syn_flood_filter264" : null
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_update_ttl",
          "id" : 2,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 269,
            "column" : 17,
            "source_fragment" : "update_ttl()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["MyIngress.update_ttl"],
          "base_default_next" : "MyIngress.ip_forward",
          "next_tables" : {
            "MyIngress.update_ttl" : "MyIngress.ip_forward"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.ip_forward",
          "id" : 3,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 229,
            "column" : 10,
            "source_fragment" : "ip_forward"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6, 3, 1],
          "actions" : ["MyIngress.forward", "MyIngress.drop", "NoAction"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "MyIngress.forward" : "node_8",
            "MyIngress.drop" : "node_8",
            "NoAction" : "node_8"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_syn_flood_filter277",
          "id" : 4,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 277,
            "column" : 4,
            "source_fragment" : "synReg.read(meta.cntSyn, (bit<32>)1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["syn_flood_filter277"],
          "base_default_next" : null,
          "next_tables" : {
            "syn_flood_filter277" : null
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.debug_flow",
          "id" : 5,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 242,
            "column" : 10,
            "source_fragment" : "debug_flow"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.syn",
              "target" : ["tcp", "syn"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.ack",
              "target" : ["tcp", "ack"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.rst",
              "target" : ["tcp", "rst"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.fin",
              "target" : ["tcp", "fin"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2],
          "actions" : ["NoAction"],
          "base_default_next" : "node_12",
          "next_tables" : {
            "NoAction" : "node_12"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_syn_flood_filter285",
          "id" : 6,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 285,
            "column" : 6,
            "source_fragment" : "synAckRstReg.read(meta.cntSynAckRst, (bit<32>)1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["syn_flood_filter285"],
          "base_default_next" : null,
          "next_tables" : {
            "syn_flood_filter285" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 262,
            "column" : 8,
            "source_fragment" : "meta.toBlock == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.toBlock"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_syn_flood_filter264",
          "false_next" : "node_5"
        },
        {
          "name" : "node_5",
          "id" : 1,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 268,
            "column" : 17,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_update_ttl",
          "false_next" : "node_8"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 274,
            "column" : 9,
            "source_fragment" : "hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_9"
        },
        {
          "name" : "node_9",
          "id" : 3,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 276,
            "column" : 11,
            "source_fragment" : "hdr.tcp.syn == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["tcp", "syn"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_syn_flood_filter277",
          "false_next" : "MyIngress.debug_flow"
        },
        {
          "name" : "node_12",
          "id" : 4,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 284,
            "column" : 8,
            "source_fragment" : "(hdr.tcp.syn == 1 && hdr.tcp.ack == 1) || (hdr.tcp.ack == 1 && hdr.tcp.rst == 1) || hdr.tcp.ack == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "or",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "syn"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "ack"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "ack"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "rst"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["tcp", "ack"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_syn_flood_filter285"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 300,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_16",
      "tables" : [
        {
          "name" : "tbl_syn_flood_filter412",
          "id" : 7,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 412,
            "column" : 17,
            "source_fragment" : "synReg.read(meta.cntSyn, (bit<32>)1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["syn_flood_filter412"],
          "base_default_next" : "tbl_syn_flood_filter373",
          "next_tables" : {
            "syn_flood_filter412" : "tbl_syn_flood_filter373"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_syn_flood_filter418",
          "id" : 8,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 418,
            "column" : 25,
            "source_fragment" : "synAckRstReg.read(meta.cntSynAckRst, (bit<32>)1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["syn_flood_filter418"],
          "base_default_next" : "tbl_syn_flood_filter373",
          "next_tables" : {
            "syn_flood_filter418" : "tbl_syn_flood_filter373"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_syn_flood_filter373",
          "id" : 9,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 373,
            "column" : 16,
            "source_fragment" : "hdr.swtraces[0].swid"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["syn_flood_filter373"],
          "base_default_next" : "MyEgress.debug_flow",
          "next_tables" : {
            "syn_flood_filter373" : "MyEgress.debug_flow"
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyEgress.debug_flow",
          "id" : 10,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 369,
            "column" : 10,
            "source_fragment" : "debug_flow"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.cntSyn",
              "target" : ["scalars", "metadata.cntSyn"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.cntSynAckRst",
              "target" : ["scalars", "metadata.cntSynAckRst"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.swtraces[0].swid",
              "target" : ["scalars", "key_0"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.mri.count",
              "target" : ["mri", "count"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["NoAction"],
          "base_default_next" : "node_23",
          "next_tables" : {
            "NoAction" : "node_23"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyEgress.swtrace",
          "id" : 11,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 398,
            "column" : 10,
            "source_fragment" : "swtrace"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13, 12],
          "actions" : ["MyEgress.add_swtrace", "NoAction"],
          "base_default_next" : "MyEgress.ip_forward",
          "next_tables" : {
            "MyEgress.add_swtrace" : "MyEgress.ip_forward",
            "NoAction" : "MyEgress.ip_forward"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyEgress.ip_forward",
          "id" : 12,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 385,
            "column" : 10,
            "source_fragment" : "ip_forward"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14, 15, 11],
          "actions" : ["MyEgress.forward", "MyEgress.drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "MyEgress.forward" : null,
            "MyEgress.drop" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_16",
          "id" : 5,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 410,
            "column" : 8,
            "source_fragment" : "hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "true_next" : "node_17",
          "false_next" : "tbl_syn_flood_filter373"
        },
        {
          "name" : "node_17",
          "id" : 6,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 411,
            "column" : 17,
            "source_fragment" : "hdr.tcp.syn == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["tcp", "syn"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_syn_flood_filter412",
          "false_next" : "node_19"
        },
        {
          "name" : "node_19",
          "id" : 7,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 417,
            "column" : 20,
            "source_fragment" : "(hdr.tcp.syn == 1 && hdr.tcp.ack == 1) || (hdr.tcp.ack == 1 && hdr.tcp.rst == 1) || hdr.tcp.ack == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "or",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "syn"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "ack"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "ack"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["tcp", "rst"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["tcp", "ack"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_syn_flood_filter418",
          "false_next" : "tbl_syn_flood_filter373"
        },
        {
          "name" : "node_23",
          "id" : 8,
          "source_info" : {
            "filename" : "syn_flood_filter.p4",
            "line" : 427,
            "column" : 12,
            "source_fragment" : "hdr.mri.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["mri", "$valid$"]
              }
            }
          },
          "true_next" : "MyEgress.swtrace",
          "false_next" : "MyEgress.ip_forward"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "syn_flood_filter.p4",
        "line" : 440,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "syn_flood_filter.p4",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}